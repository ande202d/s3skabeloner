VIRKER IKKE
VIRKER IKKE
VIRKER IKKE
VIRKER IKKE
VIRKER IKKE

maybe a cors nuget package?
https://github.com/jamshideftekhari/ItemWebService/blob/master/ItemWebService/Startup.cs


public void ConfigureServices(IServiceCollection services)
        {
            services.AddDbContext<ToDoContext>(opt => opt.UseInMemoryDatabase("TodoList"));

            // MiddleWare with policy
            services.AddCors(options =>
            {
                //HERE YOU DEFINE IT --------------------------------------------------------------------------------------
                options.AddPolicy("AllowAnyOrigin", builder => builder.AllowAnyOrigin()); //THIS ALLOWS EVERYTHING (POST,GET,GETALL ETC.) ---------------------------------
                options.AddPolicy("AllowMyLocalOrigin", builder =>builder.WithOrigins("https://localhost:57980/%22"));
                options.AddPolicy("AllowGetPost", builder=>builder.AllowAnyOrigin().WithMethods("GET","POST"));
            });

            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);
            services.AddSwaggerGen(c =>
            {
                c.SwaggerDoc("v1", new OpenApiInfo {Title = "Items API", Version = "v1.0"});
            });



        }

public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }

            app.UseSwagger();
            app.UseSwaggerUI(c => c.SwaggerEndpoint("/swagger/v1/swagger.json", "Items API v1.0"));
            app.UseSwaggerUI(c => c.RoutePrefix = "api/help");
            //HERE YOU APPLY IT --------------------------------------------------------------------------------------
            //app.UseCors("AllowAnyOrigin");
            app.UseCors("AllowMyLocalOrigin");
           //app.UseCors("AllowGetPost");


            app.UseMvc();
        }